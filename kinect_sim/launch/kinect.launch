<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="limited" default="true" doc="If true, limits joint range [-PI, PI] on all joints." />
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" />


  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find kinect_sim)/worlds/test2.sdf"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- If you change the tf, remember to change also the kinect pose in the world file .sdf-->
  <node name="kinect_tf" pkg="tf" type="static_transform_publisher"
        args="1.2 0 1.4  1.57 3.14 0 /world /kinect 50"/>
  <node name="kinect_camera_depth_optical_frame" pkg="tf" type="static_transform_publisher"
        args="0 0 0 0 0 0 /kinect /camera_depth_optical_frame 50"/>
  <node name="kinect_camera_rgb_optical_frame" pkg="tf" type="static_transform_publisher"
        args="0 0 0 0 0 0 /kinect /camera_rgb_optical_frame 50"/>

  <param name="robot_description" command="$(find xacro)/xacro '$(find myur10sim_description)/urdf/myur10.urdf.xacro' transmission_hw_interface:=$(arg transmission_hw_interface)" />

  <!--push robot description to factory and spawn robot in in gazebo-->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.0" respawn="false" output="screen" />

  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

   <!-- start this controller -->
  <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur10.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>

  <!-- load other controllers -->
  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" />

</launch>
